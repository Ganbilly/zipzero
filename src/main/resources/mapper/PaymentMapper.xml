<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ktds.zipzero.payment.mapper.PaymentMapper">

  <select id="getUserPage" resultType="PaymentDTO">
    select
      p_id as pid, p_cardtype as pcardtype, p_name as pname,
      p_time as ptime, p_curstate as pcurstate, s_id as sid,p_moddate as pmoddate
    from
      tbl_payment
    where
      m_id = #{mid} and p_check = 1
    order by
      p_time desc
    limit
      #{skip}, #{size}
  </select>

  <select id="getAllUserPage" resultType="PaymentDTO">
    select
      p_id as pid, p_cardtype as pcardtype, p_name as pname,
      p_time as ptime, p_curstate as pcurstate, s_id as sid
    from
      tbl_payment
    where
      m_id = #{mid} and p_check = 1
  </select>

  <select id="getAdminPage" resultType="FilterDTO">
    select
      tbl_payment.m_id as mid, hq_name as hq, dept_name as dept, team_name as team, m_name as mname, p_cardtype as pcardtype, p_name as pname, p_time as ptime, p_totalprice as ptotalprice, s_name as sname,tbl_payment.s_id as sid,p_moddate as pmoddate
    from
      tbl_payment
    join
      tbl_member
    on
      tbl_payment.m_id = tbl_member.m_id
    join tbl_headquarter on tbl_headquarter.hq_id = tbl_member.hq_id
    join tbl_department on tbl_department.dept_id = tbl_member.dept_id
    join tbl_team on tbl_team.team_id = tbl_member.team_id
    join tbl_state on tbl_state.s_id = tbl_payment.s_id
    WHERE
      1=1
      <if test="filter.hq != ''">
        AND hq_name LIKE concat('%', #{filter.hq}, '%')
      </if>
      <if test="filter.dept != ''">
        AND dept_name LIKE concat('%', #{filter.dept}, '%')
      </if>
      <if test="filter.team != ''">
        AND team_name LIKE concat('%', #{filter.team}, '%')
      </if>
      <if test="filter.mname != ''">
        AND m_name LIKE concat('%', #{filter.mname}, '%')
      </if>
      AND (#{filter.pcardtype} = 2 OR p_cardtype = #{filter.pcardtype})
      <if test="filter.pname != ''">
        AND p_name LIKE concat('%', #{filter.pname}, '%')
      </if>
      <if test="filter.mid != ''">
        AND tbl_payment.m_id = #{filter.mid}
      </if>
      <if test="filter.sname != ''">
        AND s_name like #{filter.sname}
      </if>
      <choose>
        <when test="filter.minptotalprice == '' and filter.maxptotalprice == ''">
          AND 1=1
        </when>
        <when test="filter.minptotalprice != '' and filter.maxptotalprice == ''">
          AND p_totalprice >= #{filter.minptotalprice}
        </when>
        <when test="filter.minptotalprice == '' and filter.maxptotalprice != ''">
          <![CDATA[
            AND p_totalprice <= #{filter.maxptotalprice}
          ]]>
        </when>
        <otherwise>
          AND (p_totalprice BETWEEN #{filter.minptotalprice} AND #{filter.maxptotalprice})
        </otherwise>
      </choose>
      <choose>
        <when test="filter.startTime == null and filter.endTime == null">
          AND 1=1
        </when>
        <when test="filter.startTime != null and filter.endTime == null">
          AND (p_time BETWEEN #{filter.startTime} AND '9999-12-31')
        </when>
        <when test="filter.startTime == null and filter.endTime != null">
          <![CDATA[
            AND (p_time BETWEEN '1000-01-01' AND #{filter.endTime})
          ]]>
        </when>
        <otherwise>
          AND (p_time BETWEEN #{filter.startTime} AND #{filter.endTime})
        </otherwise>
      </choose>
    order by
      p_time desc
    limit
      #{skip}, #{size}
  </select>

  <select id="getAllAdminPage" resultType="FilterDTO">
    select
      tbl_payment.m_id as mid, hq_name as hq, dept_name as dept, team_name as team, m_name as mname, p_cardtype as pcardtype, p_name as pname, p_time as ptime, p_totalprice as ptotalprice, s_name as sname,tbl_payment.s_id as sid
    from
      tbl_payment
    join
      tbl_member
    on
      tbl_payment.m_id = tbl_member.m_id
    join tbl_headquarter on tbl_headquarter.hq_id = tbl_member.hq_id
    join tbl_department on tbl_department.dept_id = tbl_member.dept_id
    join tbl_team on tbl_team.team_id = tbl_member.team_id
    join tbl_state on tbl_state.s_id = tbl_payment.s_id
    WHERE
      1=1
      <if test="filter.hq != ''">
        AND hq_name LIKE concat('%', #{filter.hq}, '%')
      </if>
      <if test="filter.dept != ''">
        AND dept_name LIKE concat('%', #{filter.dept}, '%')
      </if>
      <if test="filter.team != ''">
        AND team_name LIKE concat('%', #{filter.team}, '%')
      </if>
      <if test="filter.mname != ''">
        AND m_name LIKE concat('%', #{filter.mname}, '%')
      </if>
      AND (#{filter.pcardtype} = 2 OR p_cardtype = #{filter.pcardtype})
      <if test="filter.pname != ''">
        AND p_name LIKE concat('%', #{filter.pname}, '%')
      </if>
      <if test="filter.mid != ''">
        AND tbl_payment.m_id = #{filter.mid}
      </if>
      <if test="filter.sname != ''">
        AND s_name like #{filter.sname}
      </if>
      <choose>
        <when test="filter.minptotalprice == '' and filter.maxptotalprice == ''">
          AND 1=1
        </when>
        <when test="filter.minptotalprice != '' and filter.maxptotalprice == ''">
          AND p_totalprice >= #{filter.minptotalprice}
        </when>
        <when test="filter.minptotalprice == '' and filter.maxptotalprice != ''">
          <![CDATA[
            AND p_totalprice <= #{filter.maxptotalprice}
          ]]>
        </when>
        <otherwise>
          AND (p_totalprice BETWEEN #{filter.minptotalprice} AND #{filter.maxptotalprice})
        </otherwise>
      </choose>
      <choose>
        <when test="filter.startTime == null and filter.endTime == null">
          AND 1=1
        </when>
        <when test="filter.startTime != null and filter.endTime == null">
          AND (p_time BETWEEN #{filter.startTime} AND '9999-12-31')
        </when>
        <when test="filter.startTime == null and filter.endTime != null">
          <![CDATA[
            AND (p_time BETWEEN '1000-01-01' AND #{filter.endTime})
          ]]>
        </when>
        <otherwise>
          AND (p_time BETWEEN #{filter.startTime} AND #{filter.endTime})
        </otherwise>
      </choose>
    order by
      p_time desc
  </select>

  <insert id="registPayment">
    INSERT INTO tbl_payment (p_name, p_time, p_regdate, p_moddate, p_storename, p_totalprice,  p_cardtype, p_receipt, m_id, s_id, p_check, ptype_code, p_curstate, p_finstate)  
    VALUES (#{pname}, #{ptime}, #{pregdate}, #{pmoddate}, #{pstorename}, #{ptotalprice}, #{pcardtype}, #{preceipt},#{mid}, #{sid}, #{pcheck}, #{ptypecode}, #{pcurstate}, #{pfinstate})
  </insert>

  <select id="getDetail" resultType="PaymentDTO">
    select
      p_id as pid, p_name as pname, p_time as ptime,
      p_regdate as pregdate, p_moddate as pmoddate,
      p_storename as pstorename, p_totalprice as ptotalprice,
      p_cardtype as pcardtype, p_receipt as preceipt,
      p_curstate as pcurstate, p_finstate as pfinstate
    from
      tbl_payment
    where
      p_id = #{pid}
  </select>

  <update id="deletePayment">
    update tbl_payment set p_check = 0 where p_id = #{pid}
  </update>

  <update id="modifyPayment">
    update
      tbl_payment
    set
      p_name = #{pname}, <!-- 결제내역 -->
      p_time = #{ptime}, <!-- 결제시각 -->
      p_moddate = #{pmoddate}, <!-- 결제건수정시간 -->
      p_storename = #{pstorename}, <!-- 결제상호명 -->
      p_totalprice = #{ptotalprice}, <!-- 결제총액 -->
      p_cardtype = #{pcardtype}, <!-- 결제카드유형 -->
      p_receipt = #{preceipt}, <!-- 영수증 -->
      p_curstate = 2, <!-- 결제 상태 -->
      p_finstate = #{pfinstate}, <!-- 최종 결제 상태 -->
      p_check = #{pcheck}, <!-- 삭제 여부 -->
      s_id = #{sid}, <!-- 상태아이디 -->
      ptype_code = #{ptypecode} <!-- 결제 종류 -->
    where
      p_id = #{pid}
  </update>

  <select id="getPaymentByPid" resultType="PaymentDTO">
    select
      p_id as pid, p_name as pname, p_time as ptime,
      p_regdate as pregdate, p_moddate as pmoddate,
      p_storename as pstorename, p_totalprice as ptotalprice,
      p_cardtype as pcardtype, p_receipt as preceipt,
      p_curstate as pcurstate, p_finstate as pfinstate,
      s_id as sid, m_id as mid, ptype_code as ptypecode,
      CONCAT(TO_CHAR(p_regdate, 'yyyy'), TO_CHAR(p_regdate, 'MM')) as preceiptmonth,
      TO_CHAR(p_regdate, 'dd') AS preceiptdate
    from
      tbl_payment
    where
      p_id = #{pid}
  </select>

  <select id="getMidByPid" resultType="long">
    select m_id from tbl_payment
    where p_id = #{pid}
  </select>


  <!-- 본인 소속의 모든 직원들 영수증 내역 조회 쿼리문 -->
  <!-- <select id="getMidListByAuth" resultType="com.ktds.zipzero.payment.dto.PaymentDTO"> -->
  <select id="getMidListByAuth" resultType="PaymentDTO">
    SELECT
      p_id as pid, p_cardtype as pcardtype, p_name as pname,
      p_time as ptime, s_id as sid, team_name AS tname, hq_name AS hname, dept_name AS dname,
      p1.m_id AS m_id, m1.m_name AS mname,p1.p_totalprice As tprice
      
    FROM
      (
        tbl_payment p1
        JOIN tbl_member m1 ON m1.m_id =p1.m_id
        JOIN tbl_team t1 ON t1.team_id= m1.m_id
        JOIN tbl_headquarter h1 ON h1.hq_id = m1.hq_id
        JOIN tbl_department d1 ON d1.dept_id=m1.dept_id
      )
    WHERE
      p1.M_ID
    IN
    (
      SELECT target2.M_ID m_id
      FROM 
        (
          SELECT 
            m1.m_id m_id, 
            if(gubun='T', target.team_id = m1.team_id, false) tResult, 
            if(gubun='D', target.dept_id = m1.dept_id, false) dResult,
            if(gubun='H', target.hq_id = m1.hq_id, false) hResult
          FROM tbl_member m1 
          LEFT OUTER JOIN
          (
            SELECT m_id, auth_id, hq_id, dept_id, team_id,
            (
              case 
                when auth_id = 2 then team_id
                when auth_id = 3 then dept_id
                when auth_id = 4 then hq_id
              END
            ) num,
            (
              case 
                when auth_id = 2 then 'T'
                when auth_id = 3 then 'D'
                when auth_id = 4 then 'H'
              END
            ) gubun   
            FROM 
              tbl_member
            WHERE
              m_id = 9
          )
            target ON m1.m_id = target.m_id OR m1.m_id != target.m_id
        ) target2
      WHERE tResult + dResult + hResult = 1
    )
    order by
      p_time desc
   </select>

   <select id="getMidPageByAuth" resultType="PaymentDTO">
    SELECT
      p_id as pid, p_cardtype as pcardtype, p_name as pname,
      p_time as ptime, s_id as sid, team_name AS tname, hq_name AS hname, dept_name AS dname,
      p1.m_id AS m_id, m1.m_name AS mname,p1.p_totalprice As tprice
      
    FROM
      (
        tbl_payment p1
        JOIN tbl_member m1 ON m1.m_id =p1.m_id
        JOIN tbl_team t1 ON t1.team_id= m1.m_id
        JOIN tbl_headquarter h1 ON h1.hq_id = m1.hq_id
        JOIN tbl_department d1 ON d1.dept_id=m1.dept_id
      )
    WHERE
      p1.M_ID
    IN
    (
      SELECT target2.M_ID m_id
      FROM 
        (
          SELECT 
            m1.m_id m_id, 
            if(gubun='T', target.team_id = m1.team_id, false) tResult, 
            if(gubun='D', target.dept_id = m1.dept_id, false) dResult,
            if(gubun='H', target.hq_id = m1.hq_id, false) hResult
          FROM tbl_member m1 
          LEFT OUTER JOIN
          (
            SELECT m_id, auth_id, hq_id, dept_id, team_id,
            (
              case 
                when auth_id = 2 then team_id
                when auth_id = 3 then dept_id
                when auth_id = 4 then hq_id
              END
            ) num,
            (
              case 
                when auth_id = 2 then 'T'
                when auth_id = 3 then 'D'
                when auth_id = 4 then 'H'
              END
            ) gubun   
            FROM 
              tbl_member
            WHERE
              m_id = 9
          )
            target ON m1.m_id = target.m_id OR m1.m_id != target.m_id
        ) target2
      WHERE tResult + dResult + hResult = 1
    )
    order by
      p_time desc
    limit #{skip}, #{size}
   </select>

  <select id="getPageByPid" resultType="PaymentDTO">
    select
      p_id as pid, p_cardtype as pcardtype, p_name as pname,
      p_time as ptime, p_curstate as pcurstate
    from
      tbl_payment
    where
      m_id = (select m_id from tbl_payment where p_id = #{pid})
    limit
      #{skip}, #{size}

  </select>

  <select id="getMnameByMid" resultType="String">
    select
      m_name
    from
      tbl_member
    where
      m_id = #{mid}
  </select>


</mapper>
